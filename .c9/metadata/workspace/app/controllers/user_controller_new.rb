{"filter":false,"title":"user_controller_new.rb","tooltip":"/app/controllers/user_controller_new.rb","undoManager":{"mark":-1,"position":-1,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":44},"end":{"row":16,"column":5},"action":"remove","lines":["","  def login","  end","","  def admin_login","    session[:login] = 1","    session[:cart] = nil","    flash[:notice] = \"Admin user successfully logged in, cart reset.\"","    redirect_to :controller => :items","  end","","  def logout","    session[:login] = nil","    session[:cart] = nil","    flash[:notice] = \"User logged out, cart reset.\"","    redirect_to :controller => :items","  end"]},{"start":{"row":0,"column":44},"end":{"row":72,"column":7},"action":"insert","lines":["","  before_action :set_item, only: [:show, :edit, :update, :destroy]","","  # GET /items","  # GET /items.json","  def index","    @items = Item.all","  end","","  # GET /items/1","  # GET /items/1.json","  def show","  end","","  # GET /items/new","  def new","    @item = Item.new","  end","","  # GET /items/1/edit","  def edit","  end","","  # POST /items","  # POST /items.json","  def create","    @item = Item.new(item_params)","","    respond_to do |format|","      if @item.save","        format.html { redirect_to @item, notice: 'Item was successfully created.' }","        format.json { render :show, status: :created, location: @item }","      else","        format.html { render :new }","        format.json { render json: @item.errors, status: :unprocessable_entity }","      end","    end","  end","","  # PATCH/PUT /items/1","  # PATCH/PUT /items/1.json","  def update","    respond_to do |format|","      if @item.update(item_params)","        format.html { redirect_to @item, notice: 'Item was successfully updated.' }","        format.json { render :show, status: :ok, location: @item }","      else","        format.html { render :edit }","        format.json { render json: @item.errors, status: :unprocessable_entity }","      end","    end","  end","","  # DELETE /items/1","  # DELETE /items/1.json","  def destroy","    @item.destroy","    respond_to do |format|","      format.html { redirect_to items_url, notice: 'Item was successfully destroyed.' }","      format.json { head :no_content }","    end","  end","","  private","    # Use callbacks to share common setup or constraints between actions.","    def set_item","      @item = Item.find(params[:id])","    end","","    # Never trust parameters from the scary internet, only allow the white list through.","    def item_params","      params.require(:item).permit(:title, :description, :price, :image_url)","    end"]}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":14,"column":14},"end":{"row":14,"column":14},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1426957767000,"hash":"0225471f76f820369cc3b81bc10e08f28d6be28d"}